upstream my_app {
    server app_blue:${PORT}  ${BLUE_STATUS}  max_fails=1 fail_timeout=2s;
    server app_green:${PORT} ${GREEN_STATUS} max_fails=1 fail_timeout=2s;
}

server {
    listen 80;

    location / {
        # Set short timeouts. Total request time budget is < 10s.
        # If a connection or read takes > 3s, it's considered a failure.
        proxy_connect_timeout 1s;
        proxy_read_timeout 1s;

        # Retry policy: if the upstream returns an error, timeout, or
        # any 5xx error, automatically retry on the next server (the backup).
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        
        # This ensures the retry happens on the backup server
        proxy_next_upstream_tries 2;

        # Pass traffic to the upstream pool
        proxy_pass http://my_app;

        # Forward original client headers to the app
        # This ensures X-App-Pool and X-Release-Id get back to the client
        proxy_pass_request_headers on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
