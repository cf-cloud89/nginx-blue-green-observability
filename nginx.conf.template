# 1. Define our new JSON log format and capture all the fields required by the task
log_format json_logs escape=json
  '{'
    '"time": "$time_iso8601",'
    '"client_ip": "$remote_addr",'
    '"request": "$request",'
    '"status": "$status",'
    '"request_time": "$request_time",'
    # --- Upstream (App) Specific Data ---
    '"pool": "$upstream_http_x_app_pool",'
    '"release": "$upstream_http_x_release_id",'
    '"upstream": "$upstream_addr",'
    '"upstream_status": "$upstream_status",'
    '"upstream_response_time": "$upstream_response_time"'
  '}';

upstream my_app {
    # Set aggressive timeouts for fast testing
    server app_blue:${PORT}  ${BLUE_STATUS}  max_fails=1 fail_timeout=2s;
    server app_green:${PORT} ${GREEN_STATUS} max_fails=1 fail_timeout=2s;
}

server {
    listen 80;

    # 2. Tell Nginx to use our new format and log to the shared volume
    # This file will be read by the alert_watcher container
    access_log /var/log/nginx/access.log json_logs;

    location / {
        # Set fast timeouts
        proxy_connect_timeout 1s;
        proxy_read_timeout 1s;

        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;

        proxy_pass http://my_app;

        # Forward headers
        proxy_pass_request_headers on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}