services:
  app_blue:
    image: ${BLUE_IMAGE}
    container_name: app_blue
    ports:
      - "8081:${PORT}"
    environment:
      - PORT=${PORT}
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - APP_POOL=blue
    networks:
      - app-network

  app_green:
    image: ${GREEN_IMAGE}
    container_name: app_green
    ports:
      - "8082:${PORT}"
    environment:
      - PORT=${PORT}
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - APP_POOL=green
    networks:
      - app-network

  nginx_proxy:
    image: nginx:1.25.3-alpine
    container_name: nginx_proxy
    ports:
      - "8080:80"
    environment:
      - PORT=${PORT}
      - ACTIVE_POOL=${ACTIVE_POOL}
    volumes:
      - ./nginx.conf.template:/etc/nginx/templates/default.conf.template
      - ./nginx-init.sh:/nginx-init.sh
      # Mount the shared log volume so Nginx can write to it
      - nginx-logs:/var/log/nginx
    command: /bin/sh /nginx-init.sh
    networks:
      - app-network
    depends_on:
      - app_blue
      - app_green

  alert_watcher:
    image: python:3.9-slim-buster
    container_name: alert_watcher
    working_dir: /app
    volumes:
      # Mount the watcher script and requirements
      - ./watcher.py:/app/watcher.py
      - ./requirements.txt:/app/requirements.txt
      # Mount the shared log volume (read-only)
      - nginx-logs:/var/log/nginx:ro
    # On start, install deps and run the watcher
    command: sh -c "pip install -r requirements.txt && python watcher.py"
    environment:
      # Pass all the .env variables to the script
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ACTIVE_POOL=${ACTIVE_POOL}
      - ERROR_RATE_THRESHOLD=${ERROR_RATE_THRESHOLD}
      - WINDOW_SIZE=${WINDOW_SIZE}
      - ALERT_COOLDOWN_SEC=${ALERT_COOLDOWN_SEC}
      - MAINTENANCE_MODE=${MAINTENANCE_MODE}
    networks:
      - app-network
    depends_on:
      - nginx_proxy

networks:
  app-network:
    driver: bridge

# Define the named volume
volumes:
  nginx-logs: